{"ast":null,"code":"var _jsxFileName = \"/home/kevit/Documents/react-project/12-adv-starting-project/frontend/src/page/NewEventPage.jsx\";\nimport EventForm from \"../components/EventForm\";\nimport { json, redirect } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function NewEventPage() {\n  return /*#__PURE__*/_jsxDEV(EventForm, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 9\n  }, this);\n}\n_c = NewEventPage;\nexport async function action({\n  request\n}) {\n  const data = await request.formData();\n  const eventData = {\n    title: data.get('title'),\n    description: data.get('description'),\n    image: data.get('image'),\n    date: data.get('date')\n  };\n  const response = await fetch('http://localhost:8080/events', {\n    method: 'POST',\n    body: JSON.stringify(eventData),\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n  if (!response.ok) {\n    throw json({\n      message: 'Error while sending the data'\n    }, {\n      status: 500\n    });\n  }\n  return redirect('/events');\n}\nvar _c;\n$RefreshReg$(_c, \"NewEventPage\");","map":{"version":3,"names":["EventForm","json","redirect","jsxDEV","_jsxDEV","NewEventPage","fileName","_jsxFileName","lineNumber","columnNumber","_c","action","request","data","formData","eventData","title","get","description","image","date","response","fetch","method","body","JSON","stringify","headers","ok","message","status","$RefreshReg$"],"sources":["/home/kevit/Documents/react-project/12-adv-starting-project/frontend/src/page/NewEventPage.jsx"],"sourcesContent":["import EventForm from \"../components/EventForm\"\nimport { json, redirect } from \"react-router-dom\";\nexport default function NewEventPage(){\n    return (\n        <EventForm/>\n    )\n}\n\nexport async function action({request}){\n    const data = await request.formData();\n    \n    const eventData = {\n        title: data.get('title'),\n        description: data.get('description'),\n        image: data.get('image'),\n        date: data.get('date')\n    }\n\n\n    const response = await fetch('http://localhost:8080/events', {\n        method: 'POST',\n        body: JSON.stringify(eventData),\n        headers: {\n            'Content-type': 'application/json'\n        }\n    })\n\n\n    if(!response.ok){\n        throw json({message: 'Error while sending the data'}, {status: 500})\n    }\n\n    return redirect('/events')\n}"],"mappings":";AAAA,OAAOA,SAAS,MAAM,yBAAyB;AAC/C,SAASC,IAAI,EAAEC,QAAQ,QAAQ,kBAAkB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAClD,eAAe,SAASC,YAAYA,CAAA,EAAE;EAClC,oBACID,OAAA,CAACJ,SAAS;IAAAM,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAC,CAAC;AAEpB;AAACC,EAAA,GAJuBL,YAAY;AAMpC,OAAO,eAAeM,MAAMA,CAAC;EAACC;AAAO,CAAC,EAAC;EACnC,MAAMC,IAAI,GAAG,MAAMD,OAAO,CAACE,QAAQ,CAAC,CAAC;EAErC,MAAMC,SAAS,GAAG;IACdC,KAAK,EAAEH,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBC,WAAW,EAAEL,IAAI,CAACI,GAAG,CAAC,aAAa,CAAC;IACpCE,KAAK,EAAEN,IAAI,CAACI,GAAG,CAAC,OAAO,CAAC;IACxBG,IAAI,EAAEP,IAAI,CAACI,GAAG,CAAC,MAAM;EACzB,CAAC;EAGD,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;IACzDC,MAAM,EAAE,MAAM;IACdC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACX,SAAS,CAAC;IAC/BY,OAAO,EAAE;MACL,cAAc,EAAE;IACpB;EACJ,CAAC,CAAC;EAGF,IAAG,CAACN,QAAQ,CAACO,EAAE,EAAC;IACZ,MAAM3B,IAAI,CAAC;MAAC4B,OAAO,EAAE;IAA8B,CAAC,EAAE;MAACC,MAAM,EAAE;IAAG,CAAC,CAAC;EACxE;EAEA,OAAO5B,QAAQ,CAAC,SAAS,CAAC;AAC9B;AAAC,IAAAQ,EAAA;AAAAqB,YAAA,CAAArB,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}